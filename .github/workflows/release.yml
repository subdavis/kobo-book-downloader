name: Release

on:
  release:
    types: [created]

jobs:
  publish:
    name: Publish to PyPI âœ¨
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: '3.11'
          architecture: 'x64'

      - run: pip install poetry twine
      - run: poetry install
      - run: poetry build
      - run: twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}

  pyinstaller:
    name: Build for multiple platforms
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["windows-latest", "macos-latest", "ubuntu-latest"]
        python-version: [3.11]
        include:
          -
            os: windows-latest
            name: windows
          -
            os: macos-latest
            name: macos
          -
            os: ubuntu-latest
            name: ubuntu

    steps:
      -
        uses: actions/checkout@v2
      -
        name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      -
        name: Install tox
        run: |
          python -m pip install --upgrade pip;
          pip install tox;
      -
        run: tox -e buildcli -- --name kobodl-${{ matrix.name }}
      - 
        name: Upload Release Asset
        uses: alexellis/upload-assets@0.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_paths: '["./dist/kobodl*"]'
  docker:
    name: Publish Docker Container
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - 
        name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          platforms: linux/amd64,linux/arm64
          images: ghcr.io/subdavis/kobodl

      - 
        name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
